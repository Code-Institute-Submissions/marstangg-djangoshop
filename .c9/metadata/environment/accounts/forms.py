{"filter":false,"title":"forms.py","tooltip":"/accounts/forms.py","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":5,"column":58},"action":"insert","lines":["from django import forms","","class UserLoginForm(forms.Form):","    \"\"\"Form to login user\"\"\"","    username = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":24},"action":"remove","lines":["from django import forms"],"id":2},{"start":{"row":0,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["#Remember to import the below","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","From .models import MyUser",""]}],[{"start":{"row":0,"column":0},"end":{"row":10,"column":58},"action":"remove","lines":["#Remember to import the below","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","From .models import MyUser","","","class UserLoginForm(forms.Form):","    \"\"\"Form to login user\"\"\"","    username = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)"],"id":3},{"start":{"row":0,"column":0},"end":{"row":40,"column":24},"action":"insert","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","","class UserLoginForm(forms.Form):","    \"\"\"Form to login user\"\"\"","    username = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)","","class UserRegistrationForm(UserCreationForm):","    \"\"\"Form used to register a new user\"\"\"","","    password1 = forms.CharField(widget=forms.PasswordInput)","    password2 = forms.CharField(","        label=\"Password Confirmation\",","        widget=forms.PasswordInput)","    ","    class Meta:","        model = User","        fields = ['email', 'username', 'password1', 'password2']","        ","    def clean_email(self):","        email = self.cleaned_data.get('email') # cleaned_data contains all the fields with special characters processed","        username = self.cleaned_data.get('username')","        # check if the email is unique, using the Django ORM","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email address must be unique')","        return email","        ","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Please confirm your password\")","        ","        if password1 != password2:","            raise ValidationError(\"Passwords must match\")","        ","        return password2"]}],[{"start":{"row":3,"column":50},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":46},"action":"insert","lines":["from django.contrib.auth import get_user_model"],"id":5}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":9,"column":58},"end":{"row":9,"column":58},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":19,"state":"start","mode":"ace/mode/python"}},"timestamp":1567405612940,"hash":"8fe1fde0626ee6ae313d6bdac82950e2347d0e4b"}