{"filter":false,"title":"views.py","tooltip":"/accounts/views.py","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":71,"column":10},"action":"remove","lines":["from django.shortcuts import render, redirect, reverse, HttpResponse","from django.contrib import auth, messages","from django.contrib.auth.models import User","from .forms import UserLoginForm, UserRegistrationForm","from django.contrib.auth.decorators import login_required","","# Create your views here.","def index(request):","    return render(request, 'index.html')","    ","def logout(request):","    \"\"\"Logouts the user\"\"\"","    auth.logout(request)","    messages.success(request, \"You have successfully been logged out\")","    return redirect(reverse('index'))","","","def login(request):","    \"\"\"Returns the login page\"\"\"","    if request.method == 'POST':","        login_form = UserLoginForm(request.POST) # populate the form from what the user has keyed in","        if login_form.is_valid():","            # attempt to check the username and password is valid","            user = auth.authenticate(username=request.POST['username'],","                                     password=request.POST['password'])","            messages.success(request, \"You have successfully logged in\")","            if user:","                # log in the user","                auth.login(user=user, request=request)","                return redirect(reverse('index'))","            else:","                login_form.add_error('None', \"Invalid username or password\")","    else:","        login_form = UserLoginForm","        return render(request, 'login.html', {","            'form':login_form","        })","        ","@login_required        ","def profile(request):","    user = User.objects.get(email=request.user.email)","    return render(request, 'profile.html', {","        'user' : user","    })","","def register(request):","    if request.method == 'POST':","        form = UserRegistrationForm(request.POST)","        if form.is_valid():","            ","            #1 create the user","            form.save()","","            #2 check if the user has been created properly","            user = auth.authenticate(username=request.POST['username'],","                                     password=request.POST['password1'])","            if user:","                #3 if the user has been created successful, attempt to login","                auth.login(user=user, request=request)","                messages.success(request, \"You have successfully registered\")","            else:","                messages.error(request, \"Unable to register your account at this time\")","            return redirect(reverse('index'))","        else:","            return render(request, 'register.html', {","                'form':form","            })","    else:","        form = UserRegistrationForm()","        return render(request, 'register.html', {","            'form':form","        })"],"id":74}],[{"start":{"row":0,"column":0},"end":{"row":67,"column":42},"action":"insert","lines":["from django.shortcuts import render, redirect, HttpResponseRedirect","from django.contrib import messages, auth","from django.core.urlresolvers import reverse","from .forms import UserLoginForm, UserRegistrationForm","from django.template.context_processors import csrf","from django.contrib.auth.decorators import login_required","","","# Create your views here.","def logout(request):","    auth.logout(request)","    messages.success(request, 'You have successfully logged out')","    return redirect(reverse('index'))","","","def login(request):","    if request.method == 'POST':","        user_form = UserLoginForm(request.POST)","        if user_form.is_valid():","            user = auth.authenticate(username=request.POST['username_or_email'],","                                     password=request.POST['password'])","","            if user:","                auth.login(request, user)","                messages.error(request, \"You have successfully logged in\")","","                if request.GET and request.GET['next'] !='':","                    next = request.GET['next']","                    return HttpResponseRedirect(next)","                else:","                    return redirect(reverse('profile'))","            else:","                user_form.add_error(None, \"Your username or password are incorrect\")","    else:","        user_form = UserLoginForm()","","    args = {'user_form': user_form, 'next': request.GET.get('next', '')}","    return render(request, 'login.html', args)","","def register(request):","    if request.method == 'POST':","        user_form = UserRegistrationForm(request.POST)","        if user_form.is_valid():","            user_form.save()","","            user = auth.authenticate(username=request.POST.get('username'),","                                     password=request.POST.get('password1'))","","            if user:","                auth.login(request, user)","                messages.success(request, \"You have successfully registered\")","                ","                if request.GET and request.GET['next'] !='':","                    next = request.GET['next']","                    return HttpResponseRedirect(next)","                else:","                    return redirect('index')","            else:","                messages.error(request, \"unable to log you in at this time!\")","    else:","        user_form = UserRegistrationForm()","","    args = {'user_form': user_form}","    return render(request, 'register.html', args)","    ","@login_required","def profile(request):","    return render(request, 'profile.html')"],"id":75}]]},"ace":{"folds":[],"scrolltop":660,"scrollleft":0,"selection":{"start":{"row":56,"column":19},"end":{"row":56,"column":19},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1567419193605,"hash":"c45854a436facd4048c4c8cc38273705ae5e8810"}